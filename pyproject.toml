[tool.poetry]
name = "backend petchat"
version = "0.0.1"
description = "pet project"
authors = ["NicholasNartikoev <nartikoevnikolai@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "^2.0.3"
fastapi = "^0.104.1"
uvicorn = "^0.24.0.post1"
sqlalchemy = "^2.0.23"
sqlalchemy-utils = "^0.41.1"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
alembic = "^1.12.1"
aio-pika = "^9.3.0"
redis = "^5.0.1"
pydantic = {extras = ["email"], version = "^2.4.2"}
dependency-injector = {extras = ["pydantic"], version = "^4.41.0"}
pyjwt = "^2.8.0"
passlib = "^1.7.4"
pytest = "^7.4.3"
httpx = "^0.25.1"
pytest-aiohttp = "^1.0.5"
pytest-cov = "^4.1.0"
mock = "^5.1.0"
faker = "^20.0.3"
uvloop = "^0.19.0"

[tool.poetry.group.dev.dependencies]
asgi-lifespan = "^2.1.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::sqlalchemy.exc.SAWarning",
]

[tool.pytest]
python_files = "test_*.py"
python_classes = ["*Test", "Test*"]
python_functions = "test_*"
testpaths = "tests/"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
